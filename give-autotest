#!/bin/dash

# This is my implementation of autotesting the output of <filename>
# against the output of the solution of an <assignment>

PATH="$PATH:$(pwd)"

# NOTE: this file contains all helper functions
# which are used across different give scripts
. helpers.sh

# These are the elementary error checks before 
# validity checks of _AUTOTESTS
setup_error_checks() {
    assignment="$1"
    filename="$2"
    num_args="$3"
    if [ "$num_args" -ne 2 ]; then
        echo "usage: give-autotest <assignment> <filename>" >&2
        exit 1
    fi
    # check invalid assignment
    if ! echo "$assignment"|grep -E '^[a-z]+[a-zA-Z0-9_]*$' >/dev/null; then
        echo "give-autotest: invalid assignment: $assignment" >&2
        exit 1
    fi

    # check invalid filename
    if ! echo "$filename"|grep -E '^[a-zA-Z0-9_./-]+$' >/dev/null; then
        echo "give-autotest: invalid filename: $filename" >&2
        exit 1
    fi

    # check filename exists
    if ! [ -e "$filename" ]; then
        echo "give-autotest: $filename not found" >&2
        exit 1
    fi
    # check file is executable
    # exit status 0
    if ! [ -x "$filename" ]; then
        echo "$filename is not executable"
        exit 0
    fi

    # check filename is a directory
    if [ -d "$filename" ]; then
        echo "give-submit: $filename: Is a directory" >&2
        exit 1
    fi

    # check valid assignment directory
    if ! [ -d ".give/$assignment" ]; then
        echo "give-autotest: assignment $assignment not found" >&2
        exit 1
    fi

}

# from helpers.sh to check if .give exists or not
give_not_exist "give-autotest"

assignment="$1"
filename="$2"
num_args="$#"
setup_error_checks "$assignment" "$filename" "$num_args"

autotests="$(find ".give/$assignment" -mindepth 1 -maxdepth 1|grep -E "_AUTOTESTS")"
solution="$(find ".give/$assignment/_SOLUTION" -mindepth 1 -maxdepth 1)"

# add backslashes
edit_autotests="$(mktemp)"
sed 's/\\/\\\\/g' "$autotests" > "$edit_autotests"

# from helpers.sh
autotests_error_checks "$autotests" "$edit_autotests"

exp_stdout="$(mktemp)"
exp_stderr="$(mktemp)"
act_stdout="$(mktemp)"
act_stderr="$(mktemp)"

pass_count=0
fail_count=0

while read -r line; do
    # if line is a comment or a comment then continue
    if echo "$line"|grep -E '^#' >/dev/null || [ -z "$line" ]; then
        continue
    fi

    label="$(echo "$line" | cut -d '|' -f1,1)"
    arguments="$(echo "$line" | cut -d '|' -f2,2)"
    stdin="$(echo "$line" | cut -d '|' -f3,3)"
    options="$(echo "$line" | cut -d '|' -f4,4)"

    # expected solution
    echo "$stdin" | ./"$solution" $arguments 1>"$exp_stdout" 2>"$exp_stderr"
    exp_exit_status=$?

    # actual (student) solution
    echo "$stdin" | ./"$filename" $arguments 1>"$act_stdout" 2>"$act_stderr"
    act_exit_status=$?

    # configure options for diff
    option_digit=0   
    diff_options=""
    if echo "$options" | grep -E 'c' >/dev/null; then
        diff_options="$diff_options -i"
    fi
    if echo "$options" | grep -E 'b' >/dev/null; then
        diff_options="$diff_options -B"
    fi
    if echo "$options" | grep -E 'w' >/dev/null; then
        diff_options="$diff_options -w"
    fi
    if echo "$options" | grep -E 'd' >/dev/null; then
        option_digit=1
    fi

    stdout_diff=1
    stderr_diff=1
    exit_status_diff=1

    # from helpers.sh
    # compare the stdout of expected to the stdout of actual
    compare_outputs \
        "$exp_stdout" \
        "$act_stdout" \
        "$diff_options" \
        "$option_digit" \
        "$label" \
        "stdout" \
        "$stdout_diff"
    stdout_diff=$?

    # from helpers.sh
    # compare the stderr of expected to the stderr of actual
    compare_outputs \
        "$exp_stderr" \
        "$act_stderr" \
        "$diff_options" \
        "$option_digit" \
        "$label" \
        "stderr" \
        "$stdout_diff"
    stderr_diff=$?

    # check if the output exit status are equal
    if [ "$exp_exit_status" -eq "$act_exit_status" ]; then
        exit_status_diff=0
    else
        echo "Exit status of $act_exit_status incorrect should be $exp_exit_status"
    fi

    # check if there are any difference in outputs of stdout, stderr, exit status
    if [ "$stdout_diff" -eq 0 ] && [ "$stderr_diff" -eq 0 ] && [ "$exit_status_diff" -eq 0 ]; then
        echo "* Test $label passed."
        pass_count=$((pass_count+1))
    else
        fail_count=$((fail_count+1))
    fi

done < "$edit_autotests"

rm -f "$edit_autotests"
rm -f "$exp_stdout" "$act_stdout" "$exp_stderr" "$act_stderr"

# check if there were no autotests
if [ "$pass_count" -eq 0 ] && [ "$fail_count" -eq 0 ]; then
        echo "No autotests"
else
    echo "** $pass_count tests passed, $fail_count tests failed"
fi

